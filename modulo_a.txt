#include "modulo_a.h"

escreve_rle(int n_letras, char letra, char buffer_s[], int *end_i_s){
int i_s = * end_i_s;
if (n_letras<4){
    for (int i = 0; i < n_letras; i++)
        {
            buffer_s[i_s+i] = letra;
        }
    *end_i_s = *end_i_s+n_letras;
    }else{
        buffer_s[i_s]='{';
        buffer_s[i_s+1]='0';
        buffer_s[i_s+2]='}';
        buffer_s[i_s+3]=letra;
        buffer_s[i_s+4]='{';
        if (n_letras<10){ 
            buffer_s[i_s+5]=n_letras+48;
            buffer_s[i_s+6]='}';
            *end_i_s = *end_i_s+7;
        }else if (n_letras<100){
            buffer_s[i_s+5]=n_letras/10+48;
            buffer_s[i_s+6]=n_letras%10+48;
            buffer_s[i_s+7]='}';
            *end_i_s = *end_i_s+8;
        }else{
            buffer_s[i_s+5]=n_letras/100+48;
            buffer_s[i_s+6]=((n_letras/10)%10)+48;
            buffer_s[i_s+7]=n_letras%10+48;
            buffer_s[i_s+8]='}';
            *end_i_s = *end_i_s+9;    
        }
        

        

        
    }

}

escreve_rle_seq(char buffer_s[], int *end_i_s,int cont_seq){
        int i_s = * end_i_s;
        buffer_s[i_s]='{';
        buffer_s[i_s+1]='0';
        buffer_s[i_s+2]='}';    
        buffer_s[i_s+3]='{';
        buffer_s[i_s+4]='0';
        buffer_s[i_s+5]='}'; 
        buffer_s[i_s+6]='{';
        if (cont_seq<10){ 
            buffer_s[i_s+7]=cont_seq+48;
            buffer_s[i_s+8]='}';
            *end_i_s = *end_i_s+9;
        }else if (cont_seq<100){
            buffer_s[i_s+7]=cont_seq/10+48;
            buffer_s[i_s+8]=cont_seq%10+48;
            buffer_s[i_s+9]='}';
            *end_i_s = *end_i_s+10;
        }else{
            buffer_s[i_s+7]=cont_seq/100+48;
            buffer_s[i_s+8]=((cont_seq/10)%10)+48;
            buffer_s[i_s+9]=cont_seq%10+48;
            buffer_s[i_s+10]='}';
            *end_i_s = *end_i_s+11;    
        }
    
}


int do_rle(char buffer_e[],char buffer_s[],size_t tmh_buf){

int i_s = 0;
int cont_seq=0;
char letra_anterior='\0';
int n_letras = 0;
for (int i = 0; i < tmh_buf; i++)
    {

    //printf("ciclo %d :\nTestando letra:%c\n",i,buffer_e[i]);

        if( tmh_buf - i >2)
            for (int j = i; j < tmh_buf; j=j+3)
                if((buffer_e[j] == '{')&&(buffer_e[j+1] == '0')&&(buffer_e[j+2] == '}')){
                    cont_seq++;
                }else {
                    break;
                }
            
            if (cont_seq>0){
                escreve_rle(n_letras,letra_anterior,buffer_s,&i_s);
                n_letras = 0;
                escreve_rle_seq( buffer_s,&i_s,cont_seq);
                i = i + cont_seq*3-1;
                cont_seq = 0;
                letra_anterior ='\0';
                continue;
            }
            
        
        if (letra_anterior == buffer_e[i])
        {
            n_letras++;
      //      printf("letra igual n:%d\n",n_letras);
        }else{
 //               printf("escrevendo....\n",buffer_s);
                escreve_rle(n_letras,letra_anterior,buffer_s,&i_s);
                n_letras = 1;
        }
        letra_anterior = buffer_e[i];
    }
escreve_rle(n_letras,letra_anterior,buffer_s,&i_s);
return i_s;

}